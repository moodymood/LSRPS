#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RPSLS")]
public partial class RPSLSDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertUser(User instance);
  partial void UpdateUser(User instance);
  partial void DeleteUser(User instance);
  #endregion
	
	public RPSLSDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["RPSLSConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public RPSLSDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public RPSLSDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public RPSLSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public RPSLSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<User> Users
	{
		get
		{
			return this.GetTable<User>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _user_name;
	
	private System.Nullable<System.DateTime> _date_of_birth;
	
	private System.Nullable<int> _won;
	
	private System.Nullable<int> _lost;
	
	private System.Nullable<int> _drawn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Ondate_of_birthChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_of_birthChanged();
    partial void OnwonChanging(System.Nullable<int> value);
    partial void OnwonChanged();
    partial void OnlostChanging(System.Nullable<int> value);
    partial void OnlostChanged();
    partial void OndrawnChanging(System.Nullable<int> value);
    partial void OndrawnChanged();
    #endregion
	
	public User()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string user_name
	{
		get
		{
			return this._user_name;
		}
		set
		{
			if ((this._user_name != value))
			{
				this.Onuser_nameChanging(value);
				this.SendPropertyChanging();
				this._user_name = value;
				this.SendPropertyChanged("user_name");
				this.Onuser_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_birth", DbType="Date")]
	public System.Nullable<System.DateTime> date_of_birth
	{
		get
		{
			return this._date_of_birth;
		}
		set
		{
			if ((this._date_of_birth != value))
			{
				this.Ondate_of_birthChanging(value);
				this.SendPropertyChanging();
				this._date_of_birth = value;
				this.SendPropertyChanged("date_of_birth");
				this.Ondate_of_birthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_won", DbType="Int")]
	public System.Nullable<int> won
	{
		get
		{
			return this._won;
		}
		set
		{
			if ((this._won != value))
			{
				this.OnwonChanging(value);
				this.SendPropertyChanging();
				this._won = value;
				this.SendPropertyChanged("won");
				this.OnwonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lost", DbType="Int")]
	public System.Nullable<int> lost
	{
		get
		{
			return this._lost;
		}
		set
		{
			if ((this._lost != value))
			{
				this.OnlostChanging(value);
				this.SendPropertyChanging();
				this._lost = value;
				this.SendPropertyChanged("lost");
				this.OnlostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drawn", DbType="Int")]
	public System.Nullable<int> drawn
	{
		get
		{
			return this._drawn;
		}
		set
		{
			if ((this._drawn != value))
			{
				this.OndrawnChanging(value);
				this.SendPropertyChanging();
				this._drawn = value;
				this.SendPropertyChanged("drawn");
				this.OndrawnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
